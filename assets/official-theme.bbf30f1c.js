var e=Object.defineProperty,n=Object.defineProperties,t=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,i=(n,t,a)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a,s=(e,n)=>{for(var t in n||(n={}))o.call(n,t)&&i(e,t,n[t]);if(a)for(var t of a(n))r.call(n,t)&&i(e,t,n[t]);return e};import{c as l,L as p}from"./clientRender.715dbcf5.js";const u={};function c(e){var i,c=e,{components:d}=c,m=((e,n)=>{var t={};for(var i in e)o.call(e,i)&&n.indexOf(i)<0&&(t[i]=e[i]);if(null!=e&&a)for(var i of a(e))n.indexOf(i)<0&&r.call(e,i)&&(t[i]=e[i]);return t})(c,["components"]);return l("wrapper",(i=s(s({},u),m),n(i,t({components:d,mdxType:"MDXLayout"}))),l("h1",null,"Official Theme"),l("p",null,l("inlineCode",{parentName:"p"},"vite-pages-theme-doc")," is an official theme of vite-pages. It should satisfy most users' needs. This document site is powered by this theme."),l("h2",null,"How to use"),l("p",null,"You should config the theme in ",l("inlineCode",{parentName:"p"},"_theme.tsx"),":"),l("pre",null,l("code",s({parentName:"pre"},{className:"language-tsx"}),"// _theme.tsx\nimport React from 'react'\nimport { createTheme } from 'vite-pages-theme-doc'\n\nexport default createTheme({\n  topNavs: [\n    { label: 'index', path: '/' },\n    { label: 'Vite', href: 'https://github.com/vitejs/vite' },\n  ],\n  logo: 'Vite Pages',\n  // Other configs...\n})\n")),l("p",null,l("a",s({parentName:"p"},{href:"https://github.com/vitejs/vite-plugin-react-pages/tree/master/packages/playground/use-theme-doc"}),"Here is a complete example"),"."),l("h2",null,"Auto side menu generation"),l("p",null,"Doc theme can generation a side menu automatically, based on the pages information."),l("p",null,"You can control the title/sorting/grouping of the side menu, by notating these ",l(p,{to:"/page-data#static-data",mdxType:"Link"},"page static data"),":"),l("ul",null,l("li",{parentName:"ul"},"title"),l("li",{parentName:"ul"},"order (default order is 1)"),l("li",{parentName:"ul"},"group (explain later)"),l("li",{parentName:"ul"},"subGroup (explain later)")),l("h3",null,"How side menu generation works"),l("p",null,"For example, if your site has these pages:"),l("pre",null,l("code",s({parentName:"pre"},{}),"/\n/playground\n/components\n/components/button\n/components/card\n/references/glossary\n/references/apis/api1\n/references/apis/api2\n/references/error-codes/code1\n/references/error-codes/code2\n")),l("p",null,"First, it will first divide them into ",l("inlineCode",{parentName:"p"},"group"),"s:"),l("pre",null,l("code",s({parentName:"pre"},{}),"group /:\n  /\n  /playground\n\ngroup components:\n  /components\n  /components/button\n  /components/card\n\ngroup references:\n  /references/glossary\n  /references/apis/api1\n  /references/apis/api2\n  /references/error-codes/code1\n  /references/error-codes/code2\n")),l("p",null,"The classification of ",l("inlineCode",{parentName:"p"},"group"),"s is based on the ",l("strong",{parentName:"p"},"first segment")," of pages' path. You can also customize it in page static data."),l("p",null,"Then, it will divide them into ",l("inlineCode",{parentName:"p"},"subGroup"),"s:"),l("pre",null,l("code",s({parentName:"pre"},{}),"group /:\n  subGroup /:\n    /\n    /playground\n\ngroup components:\n  subGroup /:\n    /components\n    /components/button\n    /components/card\n\ngroup references:\n  subGroup /:\n    /references/glossary\n  subGroup apis:\n    /references/apis/api1\n    /references/apis/api2\n  subGroup error-codes:\n    /references/error-codes/code1\n    /references/error-codes/code2\n")),l("p",null,"The classification of ",l("inlineCode",{parentName:"p"},"subGroup"),"s is based on the ",l("strong",{parentName:"p"},"second segment")," of pages' path. You can also customize it in page static data."),l("p",null,"What is the meanings of ",l("inlineCode",{parentName:"p"},"group")," and ",l("inlineCode",{parentName:"p"},"subGroup"),"?"),l("ul",null,l("li",{parentName:"ul"},l("inlineCode",{parentName:"li"},"group")," is isolation boundary: we only display ",l("strong",{parentName:"li"},"one")," ",l("inlineCode",{parentName:"li"},"group")," at a time. If a user open a page in group ",l("inlineCode",{parentName:"li"},"references"),", he/she will only see menu items from that group. He/She will not see menu items from ",l("inlineCode",{parentName:"li"},"components")," group."),l("li",{parentName:"ul"},l("inlineCode",{parentName:"li"},"subGroup")," is how we actual grouping menu items in sider. All pages with same ",l("inlineCode",{parentName:"li"},"subGroup")," will be displayed together. This document site is an example.")),l("h2",null,"Theme configs"),l("p",null,"The ",l("inlineCode",{parentName:"p"},"createTheme")," exported by ",l("inlineCode",{parentName:"p"},"vite-pages-theme-doc")," accepts ",l("a",s({parentName:"p"},{href:"https://github.com/vitejs/vite-plugin-react-pages/blob/master/packages/theme-doc/src/index.tsx"}),"these options"),":"),l("pre",null,l("code",s({parentName:"pre"},{className:"language-ts"}),"interface ThemeConfig {\n  /**\n   * Logo at top bar\n   */\n  logo?: React.ReactNode\n  /**\n   * Logo link path\n   * @defaultValue \"/\"\n   */\n  logoLink?: string | null\n  /**\n   * Navigation menu at top bar.\n   */\n  topNavs?: ReadonlyArray<MenuConfig>\n  /**\n   * Side menu.\n   */\n  sideNavs?:\n    | ReadonlyArray<MenuConfig>\n    | ((ctx: SideNavsContext) => ReadonlyArray<MenuConfig> | null | undefined)\n  /**\n   * Extra area at top bar.\n   */\n  TopBarExtra?: React.ComponentType\n}\n\ninterface SideNavsContext {\n  readonly loadState: LoadState\n  readonly loadedData: PagesLoaded\n  readonly staticData: Record<string, any>\n}\n\ntype MenuConfig =\n  | {\n      readonly label: string\n      /**\n       * The url.\n       * @example 'https://www.google.com/'\n       */\n      readonly href: string\n      readonly icon?: React.ReactNode\n    }\n  | {\n      readonly label: string\n      /**\n       * The path in the current webapp.\n       * @example '/posts/hello-world'\n       */\n      readonly path: string\n      readonly icon?: React.ReactNode\n      /**\n       * The menu item will show an \"active\" state\n       * if it matches with current browsing path.\n       */\n      readonly activeIfMatch?: string | string[] | RouteProps\n    }\n  | {\n      /**\n       * The label of the subnav\n       */\n      readonly subMenu: string\n      readonly children: ReadonlyArray<MenuConfig>\n      readonly icon?: React.ReactNode\n      readonly activeIfMatch?: string | string[] | RouteProps\n    }\n  | {\n      /**\n       * The label of the nav group\n       */\n      readonly group: string\n      readonly children: ReadonlyArray<MenuConfig>\n    }\n")),l("h2",null,"Fully theme customization"),l("p",null,"If the basic theme doesn't satisfy your need, you can ",l(p,{to:"/theme-customization",mdxType:"Link"},"create your own theme"),"."),l("blockquote",null,l("p",{parentName:"blockquote"},"Contributions to ",l("a",s({parentName:"p"},{href:"https://github.com/vitejs/vite-plugin-react-pages/tree/master/packages/theme-doc"}),"the theme")," are always welcomed.")))}c.isMDXComponent=!0;var d=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:c});const m={};m.main=d;export default m;
